*{
    padding: 0;
    margin: 0;
    border: 0;
}

body{
    font-family: "Helvetica Neue";
}

.container{
    display: block;
}

.grid{

    /* se declaran columnas del 25% 
    del espacio disponible y filas del 
    50%, se pueden usar varias unidades 
    de medida */

    /* grid-template-columns: 25% 100px;
    por ejemplo se crea una columna de 
    100px, y despues una de 25% de espacio 
    restante, por n cantidad de veces 
    grid-template-rows: 50% auto; */

    /* --------------------------------------------- */

    /* creacion de filas y columnas 
    automaticas
    grid-auto-flow: row;
    grid-auto-flow: column;
    grid-auto-columns: 25px;
    grid-auto-rows: 100px 50px;

    -----------------------------------------------------

    primer elemento 100, segundo 50*/

    /*IMPORTANTE:  */

    /* el valor auto, funciona similar */

    /* aca se declaran 8 columnas, solo 
    ocupando la fraccion del contenedor (8,1fr), 
    y la propiedad repeat puede automatizar 
    la creacion por n cantidad de columnas o 
    filas*/


    display: grid;

    /* 
    grid-area: row start / column start / row end / column end;
    grid-area: 2 / 2 / -2 / -1
    */

    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);

    /* en grid tambien existe la propiedad gap
    en la que se puede invocar como: 
    gap: 3em 10px; ejemplo 
    row-gap: 3em
    column-gap: 10px*/

    gap: 3em 5px;
    width: 90%;
    max-width: 600px;
    margin: 80px auto;
    overflow: hidden;
    outline: 3px solid;
    height: 500px;
    background-color: cadetblue;
}

.grid1{
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(6, 1fr);
    width: 90%;
    max-width: 600px;
    margin: 80px auto;
    overflow: hidden;
    outline: 3px solid;
    height: 500px;

}

.item, .item1{
    color: #fff;
    font-size: 2.5rem;
    height: auto;
}

.item-1, .item1-1{
    background-color: hsl(257, 40%, 49%);
}

.item-2, .item1-2{
    background-color: hsl(242, 69%, 71%);
}

.item-3, .item1-3{
    background-color: hsl(141, 40%, 49%);
}


.item-4, .item1-4{
    background-color: hsl(75, 40%, 49%);
}

.item-5, .item1-5{
    background-color: hsl(34, 69%, 71%);
}

.item-6, .item1-6{
    background-color: hsl(16, 40%, 49%);
}

.item-7, .item1-7{
    background-color: hsl(10, 69%, 71%);
}

.item-8, .item1-8{
    background-color: hsl(12, 4%, 48%);
}

.item1-3{
    /* definen el inicio y el final de una seleccion 
    de lineas y columnas, debe ser en este formato
     "4/5" "star/end" */
    /* 
    grid-column-start: 1/3;
    grid-column-end: 1/3;
    grid-row-start: 1/3;
    grid-row-end: 1/3; 
    */

    /* por defecto se puede 
    grid-column ocupa una celda, por lo tanto 
    se puede ocupar como grid-column: 3, definiendo 
    el inicio en la posicion 3, pero solo ocupando 
    una celda */

    /* el elemento span tambien es 
    importante, ya que te permite posicionar un elemento
    desde su posiscion iniciar, o tambien trasladar un 
     elemento */

    /* grid-column:span 4/7; esto es para trasladar*/

    /* los numeros negativos como -1, -2 siempre 
    haran referencia a las posiciones finales 
    en relacion a las columnas y filas */

    grid-column: 5/-1;
    grid-row: 2; 

    /* para mover un elemento */
}

.item1-2{
    grid-column: 2/7;
    grid-row: 4/7;
}

.item1-4{
    grid-column: 2/5;
    grid-row: 6/6;
}

.item1-5{
    grid-column: 6/-2;
    grid-row: 4/6;
}

.item1-6{
    grid-column: 1/9;
    grid-row: 3/4;
}

.item1-7{
    grid-column: 1;
    grid-row: 2/6;
}

.item1-8{
    grid-column: 2/5;
    grid-row: 1/3;
}



